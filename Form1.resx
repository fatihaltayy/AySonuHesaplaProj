<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tb1.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>48</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABMAAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB0AAAAKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNAAAAzQEBAeEBAQHgAQEB4AEB
        AeABAQHgAQEB4AEBAeABAQHgAQEB4AEBAeABAQHgAQEB4AEBAeABAQHgAQEB4AEBAeABAQHgAQEB4AAA
        AKsAAAAdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAALovKSn/a19f/2tg
        X/9rYF//a2Bf/2tgX/9rYF//a2Bf/2tgX/9rYF//a2Bf/2tgX/9rYF//aV1c/1pMS/9YSUj/WElI/1lK
        Sf9PQkH/DgwM/wAAAGoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAyVdN
        Tf+Ke3r/TkVF/0lBQf9JQUH/S0ND/0xEQ/9KQkH/SkJB/0xDQ/9MQ0P/SUFB/0lBQf9KQUH/QDc1/z40
        MP8+NDH/Sz8+/3plZP8dGBj/AAAAewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAADJV01N/1hPTv8KCQn/NC8x/zgzNf8YFhf/CQkJ/ysnKf8uKiz/FRQV/wwLC/81MDL/NzI0/xQS
        Ev8HBBX/GA9C/xEKL/8LCQr/aFZV/x4ZGP8AAAB7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        S/+YiIf/dWlo/3NmZv9zZmb/c2Zm/3NmZv9zZmb/c2Zm/3NmZv9zZmb/c2Zm/3NmZv9wY2P/YVFQ/15O
        Tf9eTk3/aFdV/31oZv8dGBf/AAAAewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA4AAADJV01N/15UU/8HBgb/GRYX/xoXGP8aFxj/GhcY/xoXGP8aFxj/GhcY/xoXGP8aFxj/GhcY/xsY
        Gf8dGBj/GhYW/xEODv8PDQ3/alhX/x4ZGP8AAAB7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADgAAAMlXTU3/VUxL/yonKP/Htbv/1MHH/9PAxv/TwMb/08DG/9PAxv/TwMb/08DG/9PA
        xv/Uwcf/sqGl/3JfXv+qi4n/lHl4/xANDf9nVlT/HhkY/wAAAHsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAOAAAAyVdNTf9VS0v/My4w/+3Y3//85e3/++Ts//vk7P/75Oz/++Ts//vk
        7P/75Oz/++Ts//7n7/+nmJ3/JB4e/5t/ff+ykpD/EQ4O/2dWVP8eGRj/AAAAewAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAADJV01N/1VLS/8zLjD/69bd//rj6//54ur/+eLq//ni
        6v/54ur/+eLq//ni6v/54ur/+ePr//HZ3//YtLL/6sC9/66OjP8RDg7/Z1ZU/x4ZGP8AAAB7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAAAMlXTU3/VUtL/zMuMP/t2N///OXt//vk
        7P/75Oz/++Ts//vk7P/75Oz/++Ts//vk7P/75Oz/+uHo//PKyP/0yMT/r4+N/xEODv9nVlT/HhkY/wAA
        AHsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAyVdNTf9VTEv/LCgq/8+8
        w//cyM//28fO/9vHzv/bx87/28fO/9vHzv/bx87/28fO/9vHzv/axMr/0q+u/9Stq/+YfHv/EA0N/2dW
        VP8eGRj/AAAAewAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAADJV01N/1xS
        Uv8GBgb/HRob/x8cHf8fHB3/Hxwd/x8cHf8fHB3/Hxwd/x8cHf8fHB3/Hxwd/x8cHP8dGRn/HRgY/xUR
        Ef8ODAz/alhW/x4ZGP8AAAB7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAA
        AMlWTUz/l4eG/25iYv9rYF//a2Bf/2tgX/9rYF//a2Bf/2tgX/9rYF//a2Bf/2tgX/9rYF//aV1c/1pM
        S/9YSUj/WElI/2NTUf9+aWf/HRgY/wAAAHsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAJAAAAuS8pKf9rX1//bGFg/2xhYP9sYWD/bGFg/2xhYP9sYWD/bGFg/2xhYP9sYWD/bGFg/2xh
        YP9qXl3/W01M/1lKSf9ZSkn/WUpJ/09CQP8ODAz/AAAAagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABMAAAAzQEBAeEBAQHgAQEB4AEBAeABAQHgAQEB4AEBAeABAQHgAQEB4AEB
        AeABAQHgAQEB4AEBAeABAQHgAQEB4AEBAeABAQHgAQEB4AAAAKsAAAAdAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAATAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAA
        AB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAeAAAAHgAAAB4AAAAdAAAACgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////gAAD/4AAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AA
        AB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AA
        AB/wAAAf8AAAH/AAAB/4AAAf+AAAP/////8=
</value>
  </data>
</root>